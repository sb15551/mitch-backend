version: "3.6"

services:
  backend:
    restart: on-failure
    image: sb15551/mitch-backend:latest
    env_file: ./.env
    container_name: mitch-be
    ports:
      - 127.0.0.101:8080:8080
    environment:
      SPRING_APPLICATION_JSON: '{
        "spring.datasource.url"  : "jdbc:postgresql://$POSTGRESQL_HOST:$POSTGRESQL_PORT/$POSTGRESQL_DB",
        "spring.datasource.username" : "$POSTGRESQL_USER",
        "spring.datasource.password" : "$POSTGRESQL_PASSWORD",
        "spring.liquibase.url"  : "jdbc:postgresql://$POSTGRESQL_HOST:$POSTGRESQL_PORT/$POSTGRESQL_DB",
        "spring.liquibase.user" : "$POSTGRESQL_USER",
        "spring.liquibase.password" : "$POSTGRESQL_PASSWORD",
        "bot.main-name" : "$MAIN_BOT_NAME",
        "bot.main-token" : "$MAIN_BOT_TOKEN",
        "bot.support-name" : "$SUPPORT_BOT_NAME",
        "bot.support-token" : "$SUPPORT_BOT_TOKEN"
      }'
    networks:
      some_network:
        aliases:
          - backend.local
  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./config/prometheus.yml:/etc/prometheus/prometheus.yml
      - ./prometheus:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      some_network:
        aliases:
          - prometheus
  grafana:
    build: './config/grafana'
    ports:
      - 3000:3000
    volumes:
      - ./grafana:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    networks:
      some_network:
        aliases:
          - grafana
networks:
  some_network:
    name: 'common_network'